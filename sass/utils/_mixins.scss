@mixin font($fsz, $fw, $color, $ls, $lh) {
	font-size: $fsz;
	font-weight: $fw;
	color: $color;
	letter-spacing: $ls;
	line-height: $lh;
}
@mixin flex($type: flex, $direction: row, $justcont: center, $ai: center) {
	display: $type;
	flex-direction: $direction;
	justify-content: $justcont;
	align-items: $ai;
}
@mixin bordered($sz, $type, $color, $br: 1px) {
	border: $sz $type $color;
	border-radius: $br;
}
@mixin trans($type, $prop, $time: 0.25s, $func: $timing) {
	#{$type}: #{$prop};
	transition: $type $time $func;
}
@mixin for-size($range) {
	$mobile: 480px;
	$tablet: 768px;
	$desktop: 1200px;

	@if $range == mobile-only {
		@media screen and (max-width: #{$mobile - 1px}) {
			@content;
		}
	} @else if $range == mobile {
		@media screen and (min-width: $mobile) {
			@content;
		}
	} @else if $range == mobile-tablet {
		@media screen and (max-width: #{$tablet - 1px}) {
			@content;
		}
	} @else if $range == tablet {
		@media screen and (min-width: $tablet) {
			@content;
		}
	} @else if $range == tablet-only {
		@media screen and (min-width: $tablet) and (max-width: #{$desktop - 1px}) {
			@content;
		}
	} @else if $range == todesktop {
		@media screen and (max-width: #{$desktop - 1px}) {
			@content;
		}
	} @else if $range == desktop {
		@media screen and (min-width: $desktop) {
			@content;
		}
	}
}
// @mixin generateIcons($iconList) {
// 	@each $iconName in $iconList {
// 		$index: index($icons, $iconName);
// 		&:nth-child(#{$index})::before {
// 			background-image: url(../images/icons/#{$iconName}.svg);
// 		}
// 	}
// }
